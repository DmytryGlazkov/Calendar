// Generated by CoffeeScript 1.6.3
(function() {
  Calendar.CalendarController = Ember.ObjectController.extend({
    selectedDay: 22,
    selectedMonth: 10,
    selectedYear: 2013,
    currentDay: 21,
    currentMonth: 10,
    currentYear: 2013,
    getDays: (function() {
      var currentDate, day, days, daysInMonth, daysInPrevMonth, endDay, i, nowDate, selectedDate, startDay, _i, _j, _k, _ref, _ref1;
      nowDate = new Date();
      currentDate = new Date(this.get('currentYear'), this.get('currentMonth') - 1, this.get('currentDay'));
      selectedDate = new Date(this.get('selectedYear'), this.get('selectedMonth') - 1, this.get('selectedDay'));
      daysInMonth = 32 - new Date(this.get('currentYear'), this.get('currentMonth') - 1, 32).getDate();
      daysInPrevMonth = 32 - new Date(this.get('currentYear'), this.get('currentMonth') - 2, 32).getDate();
      startDay = new Date(this.get('currentYear'), this.get('currentMonth') - 1, 0).getDay();
      endDay = new Date(this.get('currentYear'), this.get('currentMonth'), 0).getDay();
      days = [];
      for (i = _i = _ref = startDay - 1; _ref <= 0 ? _i <= 0 : _i >= 0; i = _ref <= 0 ? ++_i : --_i) {
        day = new Object;
        if (new Date(this.get('currentYear'), this.get('currentMonth') - 2, daysInPrevMonth - i).getDate() === nowDate.getDate()) {
          day.dayClass = 'now';
        } else {
          day.dayClass = 'anotherDay';
        }
        day.dayNum = daysInPrevMonth - i;
        days.push(day);
      }
      for (i = _j = 1; 1 <= daysInMonth ? _j <= daysInMonth : _j >= daysInMonth; i = 1 <= daysInMonth ? ++_j : --_j) {
        day = new Object;
        if (new Date(this.get('currentYear'), this.get('currentMonth') - 1, i).getDate() === nowDate.getDate()) {
          day.dayClass = 'now';
        } else {
          if (new Date(this.get('selectedYear'), this.get('selectedMonth') - 1, i).getDate() === selectedDate.getDate()) {
            day.dayClass = 'selected';
          } else {
            day.dayClass = 'dayOfMonth';
          }
        }
        day.dayNum = i;
        days.push(day);
      }
      for (i = _k = 1, _ref1 = 7 - endDay; 1 <= _ref1 ? _k <= _ref1 : _k >= _ref1; i = 1 <= _ref1 ? ++_k : --_k) {
        day = new Object;
        if (new Date(this.get('currentYear'), this.get('currentMonth'), i).getDate() === nowDate.getDate()) {
          day.dayClass = 'now';
        } else {
          day.dayClass = 'anotherDay';
        }
        day.dayNum = i;
        days.push(day);
      }
      return [days.slice(0, 7), days.slice(7, 14), days.slice(14, 21), days.slice(21, 28), days.slice(28, 35), days.length > 35 ? days.slice(35, +(days.length - 1) + 1 || 9e9) : void 0];
    }).property('currentDay', 'currentMonth', 'currentYear')
  });

}).call(this);
